name: Weekly Stats

on: [push, pull_request]

jobs:
  stats:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set Up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Fetch Last Week's Data
        run: |
          start_date=$(date -u -d '1 week ago' +%Y-%m-%d)
          end_date=$(date -u +%Y-%m-%d)

          commit_count=$(git log --since="$start_date" --until="$end_date" --oneline --pretty=format:'%h' | wc -l)

          owner=$(echo "$$owner/$repo" | cut -d '/' -f 1)
          repo=$(echo "$$owner/$repo" | cut -d '/' -f 2)

          open_issues=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/search/issues?q=is:issue+is:open+created:$start_date..$end_date+repo:$owner/$repo&per_page=1")
          open_issue_count=$(echo "$open_issues" | jq '.total_count')

          closed_issues=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/search/issues?q=is:issue+is:closed+closed:$start_date..$end_date+repo:$owner/$repo&per_page=1")
          closed_issue_count=$(echo "$closed_issues" | jq '.total_count')

          open_prs=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/search/issues?q=is:pr+is:open+created:$start_date..$end_date+repo:$owner/$repo&per_page=1")
          open_pr_count=$(echo "$open_prs" | jq '.total_count')

          closed_prs=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/search/issues?q=is:pr+is:closed+closed:$start_date..$end_date+repo:$owner/$repo&per_page=1")
          closed_pr_count=$(echo "$closed_prs" | jq '.total_count')

          # 新增代码行数
          added_lines=$(git diff --shortstat $(git rev-list -n 1 --before="$start_date" HEAD) HEAD | awk '{print $4}')
          added_lines=${added_lines//insertion(+)/}

          # 修改代码行数
          modified_lines=$(git diff --shortstat $(git rev-list -n 1 --before="$start_date" HEAD) HEAD | awk '{print $6}')
          modified_lines=${modified_lines//deletion(-)/}

          # 活跃贡献者数量
          active_contributors=$(git log --since="$start_date" --until="$end_date" --format='%ae' | sort -u | wc -l)

          echo "Last week's stats:"
          echo "Commits: $commit_count"
          echo "Opened Issues: $open_issue_count"
          echo "Closed Issues: $closed_issue_count"
          echo "Opened PRs: $open_pr_count"
          echo "Closed PRs: $closed_pr_count"
          echo "Added Lines: $added_lines"
          echo "Modified Lines: $modified_lines"
          echo "Active Contributors: $active_contributors"

          # 生成 Markdown 表格
          markdown_table="| Metric | Value |\n|---|---|\n"
          markdown_table+="| Commits | $commit_count |\n"
          markdown_table+="| Opened Issues | $open_issue_count |\n"
          markdown_table+="| Closed Issues | $closed_issue_count |\n"
          markdown_table+="| Opened PRs | $open_pr_count |\n"
          markdown_table+="| Closed PRs | $closed_pr_count |\n"
          markdown_table+="| Added Lines | $added_lines |\n"
          markdown_table+="| Modified Lines | $modified_lines |\n"
          markdown_table+="| Active Contributors | $active_contributors |\n"
          markdown_table+="| Average Issue Resolve Time (seconds) | $avg_issue_resolve_time |\n"
          markdown_table+="| Average PR Merge Time (seconds) | $avg_pr_merge_time |\n"

          # 保存 Markdown 表格到文件
          echo "$markdown_table" > $end_date.md

          # 获取分支名称或使用默认值
          branch_name="workflows/weekly-stats"

          # 提交 Markdown 表格文件
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          if ! git rev-parse --verify "$branch_name" >/dev/null 2>&1; then
            git checkout -b "$branch_name"
          else
            git checkout "$branch_name"
          fi

          git add $end_date.md
          git commit -m "Weekly stats"
          git push origin "$branch_name"
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
